@model List<Group20_IoT.Models.ExtensionRequest>
@{
    ViewBag.Title = "Extension Requests";
}
<style>
    .card {
        width: 100% !important;
        margin-bottom: 1.7rem !important;
        background-color: #2E3842 !important;
        color: #fff !important; /* Change text color to white */
    }

    .card-header {
        background-color: #003366 !important;
        color: #fff !important; /* Change text color to white */
        text-align: center !important;
        padding: 0.75rem !important;
        font-weight: bold !important;
    }

    .card-body {
        padding: 1.25rem !important;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>


<div class="card">
    <div class="card-header">
        <h2>Extension Requests</h2>
    </div>
    <div class="card-body">
        @Html.ActionLink("View Accepted Extensions", "AcceptedExtensions", null, new { @class = "btn-primary" })
        &nbsp;&nbsp;&nbsp;&nbsp;
        @Html.ActionLink("View Rejected Extensions", "RejectedExtensions", null, new { @class = "btn-primary" })

        <div>
            <br />
            <label>Enter Reference #</label>
            <input type="number" id="searchInput" min="0" max="@int.MaxValue" />
            <button id="searchButton" class="btn-primary">Search</button>
            <br />
            <button id="resetButton" class="btn-primary" style="display:none">Reset</button>
        </div>
        <br />
        <div id="pendingTable">
            @Html.Partial("_PendingExtensionsTable", Model as List<Group20_IoT.Models.ExtensionRequest>)
        </div>

    </div>
</div>


@section scripts
{
    <script>
    $(document).ready(function () {

        var ResetButton = $("#resetButton");

        $("#searchButton").click(function () {
            var searchItem = $("#searchInput").val();

            $.ajax({
                url: '@Url.Action("Search", "Extensions")',
                type: "GET",
                data: { id: searchItem },
                success: function (data) {
                    $("#pendingTable").html(data);
                    ResetButton.show();
                },
                error: function () {
                    notifyError("Error occurred while searching.");
                    ResetButton.show();
                }});
        });
            ResetButton.click(function () {

                $.ajax({
                    url: '@Url.Action("Reset", "Extensions")',
                    type: "GET",
                    success: function (data) {
                        $("#pendingTable").html(data);
                        ResetButton.hide();
                    },
                    error: function () {
                        notifyError("Error occurred while resetting.");
                        ResetButton.show();
                    }
                });


        });
    });
    </script>
    <script>
        function AcceptExtension(stockId)
        {
            $.ajax({
                url: '@Url.Action("AcceptExtension", "Extensions")',
                type: 'POST',
                data: { id: stockId },
                dataType: 'json',
                success: function (data) {
                    if (!data.success) {
                        notifyError(data.message);
                    } else {
                        localStorage.setItem('notificationMessage', data.message);
                        location.reload();
                    }


                },
                error: function () {
                    notifyError("An error occurred while applying the Extension.");
                }
            });

        }

        function RejectExtension(stockId)
{
            $.ajax({
                url: '@Url.Action("RejectExtension", "Extensions")',
                type: 'POST',
                data: { id: stockId },
                dataType: 'json',
                success: function (data) {
                    localStorage.setItem('notificationMessage', data.message);
                    location.reload();
                },
                error: function () {
                    notifyError("An error occurred while rejecting the Extension.");
                }
            });
}
    </script>
}


