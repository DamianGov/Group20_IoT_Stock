

@{
    ViewBag.Title = "Stock Management";
}
<style>
    .card {
        width: 100% !important;
        margin-bottom: 1.7rem !important;
        background-color: #2E3842 !important;
        color: #fff !important; /* Change text color to white */
    }

    .card-header {
        background-color: #003366 !important;
        color: #fff !important; /* Change text color to white */
        text-align: center !important;
        padding: 0.75rem !important;
        font-weight: bold !important;
    }

    .card-body {
        padding: 1.25rem !important;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>

<h2>Stock Management</h2>
<br />
<p>
    @Html.ActionLink("Create Stock", "Create", null, new { @class = "btn-primary" })
</p>
<br />
<div>
    <label>Enter Stock Code</label>
    <input type="text" id="searchInput" />
    <button id="searchButton" class="btn-primary">Search</button>            
    <br />
    <button id="resetButton" class="btn-primary" style="display:none">Reset</button>
    <br />
    <select id="filterSortby">
        <option value="">Default Sorting</option>
        <option value="StockLow">Sort By Quantity: Low To High</option>
        <option value="StockHigh">Sort By Quantity: High To Low</option>
        <option value="OnLoanLow">Sort By Quantity On Loan: Low To High</option>
        <option value="OnLoanHigh">Sort By Quantity On Loan: High To Low</option>
    </select>
</div>
<br />
<div id="stockTable">
    @Html.Partial("_StockTable", Model as List<Group20_IoT.Models.ViewModel.StockViewModel>)
</div>

@section scripts {
    <script>
        $(document).ready(function () {

            var ResetButton = $("#resetButton");

            $("#searchButton").click(function () {
                var searchItem = $("#searchInput").val();

                $.ajax({
                    url: '@Url.Action("Search", "Stocks")',
                    type: "GET",
                    data: { searchItem: searchItem },
                    success: function (data) {
                        $("#stockTable").html(data);
                        ResetButton.show();
                    },
                    error: function () {
                        notifyError("Error occurred while searching.");
                        ResetButton.show();
                    }
                });
            });

                ResetButton.click(function () {

        $.ajax({
            url: '@Url.Action("Reset", "Stocks")',
            type: "GET",
            success: function (data) {
                $("#stockTable").html(data);
                ResetButton.hide();
            },
            error: function () {
                notifyError("Error occurred while resetting.");
                ResetButton.show();
            }
        });


});

            $("#filterSortby").change(function () {
                var sort = $(this).val();
                    $.ajax({
                    url: '@Url.Action("Sort", "Stocks")',
                    type: "GET",
                        data: { sort: sort },
                    success: function (data) {
                        $("#stockTable").html(data);
                    },
                    error: function () {
                        notifyError("Error occurred while filtering.");
                    }
                });


            });
        });
    </script>
}