
@model List<Group20_IoT.Models.LoanStatus>
    @using Group20_IoT.Helpers

<style>
    .card {
        width: 100% !important;
        margin-bottom: 1.7rem !important;
        background-color: #2E3842 !important;
        color: #fff !important; /* Change text color to white */
    }

    .card-header {
        background-color: #003366 !important;
        color: #fff !important; /* Change text color to white */
        text-align: center !important;
        padding: 0.75rem !important;
        font-weight: bold !important;
    }

    .card-body {
        padding: 1.25rem !important;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>


        <table class="table text-white">
            <thead>
                <tr>
                    <th>
                        Reference #
                    </th>
                    <th>
                        User
                    </th>
                    <th>
                        User Role
                    </th>
                    <th>
                        Stock
                    </th>
                    <th>
                        Quantity Loaned
                    </th>
                    <th>
                        Accepted By
                    </th>
                    <th>
                        Accepted Date
                    </th>
                    <th>
                        Borrow Date
                    </th>
                    <th>
                        Due Date
                    </th>
                    @if(Model.Any(m => m.Note != string.Empty))
                    { 
                    <th>
                        Note
                    </th>
                    }
                    <th>
                        Loan Status
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>
                                @item.RequestLoanStock.Users.GetFullName() [@item.RequestLoanStock.Users.UniNum]
                            </td>
                            <td>
                                @item.RequestLoanStock.Users.Role.Type
                            </td>
                            <td>@item.RequestLoanStock.Stock.Name [@item.RequestLoanStock.Stock.StockCode]</td>
                            <td>
                                @item.RequestLoanStock.Quantity
                            </td>
                            <td>
                                @item.Users.GetFullName()
                            </td>
                            <td>
                                @item.AccOn.ToString("dd MMMM yyyy")
                            </td>
                            <td>
                                @item.RequestLoanStock.FromDate.ToString("dd MMMM yyyy")
                            </td>
                            <td>
                                @item.RequestLoanStock.DueDate.ToString("dd MMMM yyyy")
                            </td>
                            @if(Model.Any(m => m.Note != string.Empty))
                            { 
                            <td>
                                @item.Note
                            </td>
                            }
                            
                            <td>
                                @Html.DisplayEnumFor(model => item.Status)
                            </td>
                            @if (item.Status != Group20_IoT.Models.LoanStatus.LoanStatusStock.Returned && item.Status != Group20_IoT.Models.LoanStatus.LoanStatusStock.Cancelled)
                            {
                                <td>
                                    <button id="changeStatusButton" data-target="#ChangeStatusModal-@item.Id" data-toggle="modal" class="btn btn-primary">Change Status</button>
                                    <div class="modal fade" data-keyboard="false" data-backdrop="static" id="ChangeStatusModal-@item.Id" tabindex="-1">
                                        <div class="modal-dialog modal-dialog-centered">
                                            <div class="modal-content" style="background-color: #2E3842; color: #fff;">
                                                <div class="modal-header">
                                                    <input type="button" value="&#x274C;" class="close" data-dismiss="modal" />
                                                    <p class="modal-title"  style="color: #03e9f4;">Change Status</p>
                                                </div>
                                                <div class="modal-body">
                                                    <p>
                                                      <strong>Stock Code: </strong>  @item.RequestLoanStock.Stock.StockCode
                                                    </p>
                                                    <p><strong>Stock Name: </strong>  @item.RequestLoanStock.Stock.Name</p>
                                                    <p>
                                                        <strong>Quantity: </strong>   @item.RequestLoanStock.Quantity
                                                    </p>
                                                    <p>
                                                        <strong>User: </strong>   @item.Users.GetFullName() [@item.RequestLoanStock.Users.UniNum]
                                                    </p>
                                                    <p>
                                                      <strong>Accepted Date: </strong>   @item.AccOn.ToString("dd MMMM yyyy")
                                                    </p>
                                                    <p>
                                                        <strong>Borrow Date: </strong>  @item.RequestLoanStock.FromDate.ToString("dd MMMM yyyy")
                                                    </p>
                                                    <p>
                                                        <strong>Due Date: </strong>  @item.RequestLoanStock.DueDate.ToString("dd MMMM yyyy")
                                                    </p>
                                                    <p>
                                                      <strong>Note: </strong>  @item.Note
                                                    </p>
                                                    <p>
                                                       <strong>Current Status: </strong> @Html.DisplayEnumFor(model => item.Status)
                                                    </p>
                                                    <br/>

                                                    <p>Add a Note:</p>
                                                    <p>@Html.TextAreaFor(model => item.Note, htmlAttributes: new { @class = "textarea", id = "statusNote-" + item.Id })</p>
                                                    <p>
                                                        Change Status To:
                                                    </p>
                                                    <p>
                                                        @Html.EnumDropDownListFor(model => item.Status, htmlAttributes: new { @class = "form-control", @selected = item.Status, id = "statusDropdown-" + item.Id })
                                                    </p>
                                                    <br />
                                                </div>
                                                <div class="modal-footer">
                                                    <button id="changeStatus" class="btn btn-primary" onclick="ChangeStatus(@item.Id)" data-dismiss="modal">Change</button>&nbsp;&nbsp;
                                                    <button class="btn btn-primary" id="Close-@item.Id" data-dismiss="modal">Cancel</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" style="text-align:center;font-size:16px"><strong>No Accepted Loans</strong></td>
                    </tr>
                }
            </tbody>
        </table>

