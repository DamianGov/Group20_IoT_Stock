@model IEnumerable<Group20_IoT.Models.RequestLoanStock>
@{
    ViewBag.Title = "My Loan Requests";
}
<style>
    .card {
        width: 100% !important;
        margin-bottom: 1.7rem !important;
        background-color: #2E3842 !important;
        color: #fff !important; /* Change text color to white */
    }

    .card-header {
        background-color: #003366 !important;
        color: #fff !important; /* Change text color to white */
        text-align: center !important;
        padding: 0.75rem !important;
        font-weight: bold !important;
    }

    .card-body {
        padding: 1.25rem !important;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>
<div class="card">
    <div class="card-header">
        <h2>My Loan Requests</h2>
    </div>
    <div class="card-body">
        @Html.ActionLink("My Accepted Loan Requests", "AcceptedLoans", null, new { @class = "btn btn-primary" })

        <div>
            <label>Enter Reference #</label>
            <input type="number" id="searchInput" min="0" max="@int.MaxValue" />
            <button id="searchButton" class="btn-primary">Search</button>
            <br />
            <button id="resetButton" class="btn-primary" style="display:none">Reset</button>
            <br />
            <select id="filterSortby">
                <option value="">Default Filter</option>
                <option value=0>Filter Pending</option>
                <option value=2>Filter Rejected</option>
                <option value=3>Filter Cancelled</option>
            </select>
        </div>
        <br />
        <div id="requestLoanTable">
            @Html.Partial("_RequestLoanTable", Model as IEnumerable<Group20_IoT.Models.RequestLoanStock>)
        </div>

    </div>
</div>


@section scripts
{
    <script>
        $(document).ready(function () {

             var ResetButton = $("#resetButton");

 $("#searchButton").click(function () {
     var searchItem = $("#searchInput").val();

     $.ajax({
         url: '@Url.Action("Search", "RequestLoan")',
         type: "GET",
         data: { id: searchItem },
         success: function (data) {
             $("#requestLoanTable").html(data);
             ResetButton.show();
         },
         error: function () {
             notifyError("Error occurred while searching.");
             ResetButton.show();
         }
     });
 });
            ResetButton.click(function () {

                $.ajax({
                    url: '@Url.Action("Reset", "RequestLoan")',
                    type: "GET",
                    success: function (data) {
                        $("#requestLoanTable").html(data);
                        ResetButton.hide();
                    },
                    error: function () {
                        notifyError("Error occurred while resetting.");
                        ResetButton.show();
                    }
                });
            });

             $("#filterSortby").change(function () {
     var sort = $(this).val();
         $.ajax({
         url: '@Url.Action("Sort", "RequestLoan")',
         type: "GET",
             data: { sort: sort },
         success: function (data) {
             $("#requestLoanTable").html(data);
         },
         error: function () {
             notifyError("Error occurred while filtering.");
         }
     });


 });
 });


    </script>

    <script>

            $(".cancel-button").on("click", function () {
            var ID = $(this).data("id");
                cancelLoan(ID, false);
        });

        function cancelLoan(ID) {
            $.ajax({
                url: '@Url.Action("CancelRequest", "RequestLoan")',
                type: 'POST',
                data: { id: ID },
                dataType: 'json',
                success: function (data) {
                localStorage.setItem('notificationMessage', data.message);
                location.reload();
                },
                error: function () {
                notifyError("An error occurred while cancelling the request.");

                }
                });
                }
    </script>


}
