
@{
    Group20_IoT.Models.IoTContext db = new Group20_IoT.Models.IoTContext();
    ViewBag.Title = "Stock Request";
    Group20_IoT.Models.Users user = Session["User"] as Group20_IoT.Models.Users;
    int StandardRoleId = db.Role.Single(x => x.Type.Equals("Member")).Id;
}
<style>
    .card {
        width: 100% !important;
        margin-bottom: 1.7rem !important;
        background-color: #2E3842 !important;
        color: #fff !important; /* Change text color to white */
    }

    .card-header {
        background-color: #003366 !important;
        color: #fff !important; /* Change text color to white */
        text-align: center !important;
        padding: 0.75rem !important;
        font-weight: bold !important;
    }

    .card-body {
        padding: 1.25rem !important;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>
<h2>Stock Requests</h2>

<div>
    <label>Enter Requested Stock Name</label>
    <input type="text" id="searchInput" />
    <button id="searchButton" class="btn btn-primary">Search</button>
</div>
<br />
@if (user.RoleId == StandardRoleId)
{
    <div>
        <input type="checkbox" id="showMyRequests" /> Show My Requests Only
    </div>

    <div id="rsTable" class="card">
        @Html.Partial("_RequestStockTable", Model as List<Group20_IoT.Models.ViewModel.RequestStockViewModel>)
    </div>
}
else
{
    <div id="rsTable" class="card">
        @Html.Partial("_RequestStockTableAdmin", Model as List<Group20_IoT.Models.ViewModel.RequestStockViewModel>)
    </div>
}


@section scripts {
    <script>
        $(document).ready(function () {
            $("#searchButton").click(function () {
                var searchItem = $("#searchInput").val();

                $.ajax({
                    url: '@Url.Action("Search", "RequestStock")',
                    type: "GET",
                    data: { searchItem: searchItem },
                    success: function (data) {
                        $("#rsTable").html(data);
                    },
                    error: function () {
                        notifyError("Error occurred while searching.");
                    }
                });
            });
        });

        $("#showMyRequests").change(function () {
            var ShowMyRequests = this.checked;

            $.ajax({
                url: '@Url.Action("MyRequestsOnly", "RequestStock")',
                type: 'GET',
                data: { showMyRequests: ShowMyRequests },
                success: function (data) {
                    $("#rsTable").html(data);
                },
                error: function () {
                    notifyError("Error occurred while filtering.");
                }
            });
        });
    </script>
}