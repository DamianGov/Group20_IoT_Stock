@model Group20_IoT.Models.RequestStock

@{
    ViewBag.Title = "Submit Stock Request";
}
<style>
    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>
<h2>Stock Request</h2>
<br />
@using (Html.BeginForm("Create", "RequestStock", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.StockName, htmlAttributes: new { @class = "control-label col-md-2 required-star" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2 required-star" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", min = 1, max = int.MaxValue } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StockPrice, htmlAttributes: new { @class = "control-label col-md-2 required-star" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StockLink, htmlAttributes: new { @class = "control-label col-md-2 required-star" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StockLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="StockImage" class="control-label col-md-2 required-star">Stock Image</label>
            <div class="col-md-10">
                <input type="file" name="image" id="image" accept=".jpg, .jpeg, .png, .gif" />
                @Html.ValidationMessageFor(model => model.StockImage, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Request" class="btn-primary" />
            </div>
        </div>
    </div>

}
<br />
    <div>
        @Html.ActionLink("Back to List of Stock Requests", "Index", null, new { @class = "btn-primary" })
    </div>


@section scripts
{
    <script>

        $("#Quantity").on("keypress keyup blur", function (event) {
    // Allow only digits and backspace key (code 8)
    if (event.keyCode !== 8 && (event.keyCode < 48 || event.keyCode > 57)) {
    event.preventDefault();
    }
    });
    </script>

}