@model Group20_IoT.Models.Users
@{
    ViewBag.Title = "Account Details";
}
<style>
    .card {
        width: 100% !important;
        margin-bottom: 1.7rem !important;
        background-color: #2E3842 !important;
        color: #fff !important;
    }

    .card-header {
        background-color: #003366 !important;
        color: #fff !important;
        text-align: center !important;
        padding: 0.75rem !important;
        font-weight: bold !important;
    }

    .card-body {
        padding: 1.25rem !important;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>
<h2>My Account Details</h2>
<br/>
    <div class="form-group">
        <label class="control-label col-md-2">Staff/Student Number</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.UniNum, new { htmlAttributes = new { @class = "form-control readonly", @readonly = true } })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control readonly details", @readonly = true } })
            <input type="text" id="editFirstName" style="display: none;" class="form-control text-box single-line" data-val="true" data-val-length="The First Name must not exceed 40 characters" data-val-length-max="40" data-val-required="Please enter a First Name" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control readonly details", @readonly = true } })
            <input type="text" id="editSurname" style="display: none;" class="form-control text-box single-line"  data-val="true" data-val-length="The Surname must not exceed 40 characters" data-val-length-max="40" data-val-required="Please enter a Surname" />

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control readonly", @readonly = true } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StudyYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StudyYear, new { htmlAttributes = new { @class = "form-control readonly details", @readonly = true } })
            <input type="number" id="editStudyYear" style="display: none;" class="form-control text-box single-lin"  data-val="true" data-val-number="The field Study Year must be a number." data-val-range="The Study Year should be between 1 and 10" data-val-range-max="10" data-val-range-min="1" data-val-required="Please enter a Study Year" />


        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control readonly details", @readonly = true } })
            <input type="text" id="editQualification" style="display: none;" class="form-control text-box single-line"  data-val="true" data-val-length="The Qualification must not exceed 255 characters" data-val-length-max="255" data-val-required="Please enter a Qualification" />

        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button id="editButton" class="btn btn-primary">Edit Details</button>
            <button id="saveButton" style="display:none;" class="btn btn-primary">Save Changes</button>&nbsp;&nbsp;
            <button id="cancelButton" style="display:none;" class="btn btn-primary">Cancel</button>
        </div>
    </div>


@section scripts
{
    <script>
        $(document).ready(function () {
            $("#editButton").click(function () {

                $(".details").hide();
                $("#editFirstName").val(document.getElementById("FirstName").value).show();
                $("#editSurname").val(document.getElementById("Surname").value).show();
                $("#editStudyYear").val(document.getElementById("StudyYear").value).show();
                $("#editQualification").val(document.getElementById("Qualification").value).show();

                $("#saveButton, #cancelButton").show();
                $("#editButton").hide()

                $("#cancelButton").click(function () {
                    // Hide edit mode, show view mode
                    $(".details").show();
                    $("#editFirstName").hide();
                    $("#editSurname").hide();
                    $("#editStudyYear").hide();
                    $("#editQualification").hide();

                    // Hide save and cancel buttons, show edit button
                    $("#saveButton, #cancelButton").hide();
                    $("#editButton").show();
                });

                $("#saveButton").click(function () {
                    var updatedFirstName = document.getElementById("editFirstName").value;
                    var updatedSurname = document.getElementById("editSurname").value;
                    var updatedStudyYear = document.getElementById("editStudyYear").value;
                    var updatedQualification = document.getElementById("editQualification").value;

                    $.ajax({
    url: '@Url.Action("UpdateDetails", "Home")',
                        type: 'POST',
                        data: { firstname: updatedFirstName, surname: updatedSurname, studyyear: updatedStudyYear, qualification: updatedQualification },
    dataType: 'json',
                        success: function (data) {
                            document.getElementById("FirstName").value = updatedFirstName;
                            document.getElementById("Surname").value = updatedSurname;
                            document.getElementById("StudyYear").value = updatedStudyYear;
                            document.getElementById("Qualification").value = updatedQualification;

                            $("#cancelButton").click();

        if (!data.success) {
            notifyError(data.message);
        } else {
            localStorage.setItem('notificationMessage', data.message);
            location.reload();
        }


    },
    error: function () {
        notifyError("An error occurred while updating your details.");
    }
});

                });
            });

        });
    </script>


}