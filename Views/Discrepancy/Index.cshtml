@model IEnumerable<Group20_IoT.Models.StockDiscrepancy>

@{
    ViewBag.Title = "Stock Discrepancies";
}
<style>
    .card-deck {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .card {
        width: calc(50% - 20px);
        margin: 10px;
        margin-bottom: 20px !important;
        background-color: #2E3842;
        color: #fff;
    }

    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between; /* Distribute cards evenly in a row */
    }

    .card-header {
        background-color: #003366;
        color: #03e9f4;
        text-align: center;
        padding: 0.75rem;
        font-weight: bold;
    }

    .card-body {
        padding: 1.25rem;
        text-align: center;
    }

    .badge {
        margin-right: 0.5rem;
        padding: 0.5em;
        border-radius: 4px;
        font-size: 14px;
    }

    .badge-success {
        background-color: #28a745;
        color: #fff;
    }

    .badge-danger {
        background-color: #dc3545;
        color: #fff;
    }

    .btn-primary {
        display: inline-block;
        padding: 10px 20px;
        color: #03e9f4;
        font-size: 13px;
        text-decoration: none;
        text-transform: uppercase;
        border: none;
        outline: none;
        background: transparent;
        transition: background 0.5s, color 0.5s;
        margin-top: 20px;
        letter-spacing: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #03e9f4;
            color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;
        }
</style>


<h2>Stock Discrepancies Management</h2>
<br />
<p>
    @Html.ActionLink("Submit a Discrepancy", "Create", null, new { @class = "btn-primary" })
</p>
<br />
<div>
    <label>Enter Reference #</label>
    <input type="number" id="searchInput" min="0" max="@int.MaxValue" />
    <button id="searchButton" class="btn-primary">Search</button>
    <br />
    <button id="resetButton" class="btn-primary" style="display:none">Reset</button>
</div>
<br />
<div id="discrepancyTable">
    @Html.Partial("_DiscrepancyTable", Model as IEnumerable<Group20_IoT.Models.StockDiscrepancy>)
</div>



@section scripts
{
    <script>
        $(document).ready(function () {

            var ResetButton = $("#resetButton");

            $("#searchButton").click(function () {
                var searchItem = $("#searchInput").val();

                $.ajax({
                    url: '@Url.Action("Search", "Discrepancy")',
                    type: "GET",
                    data: { refer: searchItem },
                    success: function (data) {
                        $("#discrepancyTable").html(data);
                        ResetButton.show();
                    },
                    error: function () {
                        notifyError("Error occurred while searching.");
                        ResetButton.show();
                    }});
            });
                ResetButton.click(function () {

                    $.ajax({
                        url: '@Url.Action("Reset", "Discrepancy")',
                        type: "GET",
                        success: function (data) {
                            $("#discrepancyTable").html(data);
                            ResetButton.hide();
                        },
                        error: function () {
                            notifyError("Error occurred while resetting.");
                            ResetButton.show();
                        }
                    });


                });



                   $(".resolve-button").on("click", function () {
       var ID = $(this).data("id");
       updateResolve(ID);
   });

   function updateResolve(ID) {
       $.ajax({
           url: '@Url.Action("ResolveDiscrepancy", "Discrepancy")',
           type: 'POST',
           data: { id: ID },
           dataType: 'json',
           success: function (data) {
               localStorage.setItem('notificationMessage', data.message);
               location.reload();
           },
           error: function () {
               notifyError("An error occurred while resolving discrepancy.");

           }
       });
   }
        });
    </script>
}